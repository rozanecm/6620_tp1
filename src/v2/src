	.file	1 "main.c"
	.section .mdebug.abi32
	.previous
	.abicalls
	.rdata
	.align	2
$LC0:
	.ascii	"Usage:\n"
	.ascii	" \tcommon -h \n"
	.ascii	"\tcommon -v \n"
	.ascii	"\tcommon [options] M N \n"
	.ascii	"Options:\n"
	.ascii	"\t-h,--help \tPrint usage information.\n"
	.ascii	"\t-V, --version \tPrints version information.\n"
	.ascii	"\t-o, --output\tPath to output file.\n"
	.ascii	"\t-d  --divisor Just the divisor\n"
	.ascii	"\t-m  --multiple Just the multiple\n"
	.ascii	"Examples:\n"
	.ascii	"\tcommon -o - 256 192\n\000"
	.text
	.align	2
	.globl	print_help_data
	.ent	print_help_data
print_help_data:
	.frame	$fp,40,$31		# vars= 0, regs= 3/0, args= 16, extra= 8
	.mask	0xd0000000,-8
	.fmask	0x00000000,0
	.set	noreorder
	.cpload	$25
	.set	reorder
	subu	$sp,$sp,40
	.cprestore 16
	sw	$31,32($sp)
	sw	$fp,28($sp)
	sw	$28,24($sp)
	move	$fp,$sp
	la	$4,$LC0
	la	$25,printf
	jal	$31,$25
	move	$sp,$fp
	lw	$31,32($sp)
	lw	$fp,28($sp)
	addu	$sp,$sp,40
	j	$31
	.end	print_help_data
	.size	print_help_data, .-print_help_data
	.rdata
	.align	2
$LC1:
	.ascii	"Version 1.0\n\000"
	.text
	.align	2
	.globl	print_version_info
	.ent	print_version_info
print_version_info:
	.frame	$fp,40,$31		# vars= 0, regs= 3/0, args= 16, extra= 8
	.mask	0xd0000000,-8
	.fmask	0x00000000,0
	.set	noreorder
	.cpload	$25
	.set	reorder
	subu	$sp,$sp,40
	.cprestore 16
	sw	$31,32($sp)
	sw	$fp,28($sp)
	sw	$28,24($sp)
	move	$fp,$sp
	la	$4,$LC1
	la	$25,printf
	jal	$31,$25
	move	$sp,$fp
	lw	$31,32($sp)
	lw	$fp,28($sp)
	addu	$sp,$sp,40
	j	$31
	.end	print_version_info
	.size	print_version_info, .-print_version_info
	.align	2
	.globl	mcd
	.ent	mcd
mcd:
	.frame	$fp,48,$31		# vars= 8, regs= 3/0, args= 16, extra= 8
	.mask	0xd0000000,-8
	.fmask	0x00000000,0
	.set	noreorder
	.cpload	$25
	.set	reorder
	subu	$sp,$sp,48
	.cprestore 16
	sw	$31,40($sp)
	sw	$fp,36($sp)
	sw	$28,32($sp)
	move	$fp,$sp
	sw	$4,48($fp)
	sw	$5,52($fp)
	lw	$2,48($fp)
	lw	$3,52($fp)
	slt	$2,$2,$3
	beq	$2,$0,$L20
	lw	$2,48($fp)
	sw	$2,24($fp)
	lw	$2,52($fp)
	sw	$2,48($fp)
	lw	$2,24($fp)
	sw	$2,52($fp)
$L20:
	lw	$2,52($fp)
	bne	$2,$0,$L21
	lw	$2,48($fp)
	sw	$2,28($fp)
	b	$L19
$L21:
	lw	$3,48($fp)
	lw	$2,52($fp)
	div	$0,$3,$2
	mfhi	$3
	.set	noreorder
	bne	$2,$0,1f
	nop
	break	7
1:
	.set	reorder
	lw	$4,52($fp)
	move	$5,$3
	la	$25,mcd
	jal	$31,$25
	sw	$2,28($fp)
$L19:
	lw	$2,28($fp)
	move	$sp,$fp
	lw	$31,40($sp)
	lw	$fp,36($sp)
	addu	$sp,$sp,48
	j	$31
	.end	mcd
	.size	mcd, .-mcd
	.align	2
	.globl	mcm
	.ent	mcm
mcm:
	.frame	$fp,40,$31		# vars= 0, regs= 4/0, args= 16, extra= 8
	.mask	0xd0010000,-4
	.fmask	0x00000000,0
	.set	noreorder
	.cpload	$25
	.set	reorder
	subu	$sp,$sp,40
	.cprestore 16
	sw	$31,36($sp)
	sw	$fp,32($sp)
	sw	$28,28($sp)
	sw	$16,24($sp)
	move	$fp,$sp
	sw	$4,40($fp)
	sw	$5,44($fp)
	lw	$3,40($fp)
	lw	$2,44($fp)
	mult	$3,$2
	mflo	$16
	bgez	$16,1f
	subu	$16,$0,$16
1:
	lw	$4,40($fp)
	lw	$5,44($fp)
	la	$25,mcd
	jal	$31,$25
	div	$0,$16,$2
	mflo	$16
	.set	noreorder
	bne	$2,$0,1f
	nop
	break	7
1:
	.set	reorder
	move	$2,$16
	move	$sp,$fp
	lw	$31,36($sp)
	lw	$fp,32($sp)
	lw	$16,24($sp)
	addu	$sp,$sp,40
	j	$31
	.end	mcm
	.size	mcm, .-mcm
	.align	2
	.globl	check_range
	.ent	check_range
check_range:
	.frame	$fp,24,$31		# vars= 8, regs= 2/0, args= 0, extra= 8
	.mask	0x50000000,-4
	.fmask	0x00000000,0
	.set	noreorder
	.cpload	$25
	.set	reorder
	subu	$sp,$sp,24
	.cprestore 0
	sw	$fp,20($sp)
	sw	$28,16($sp)
	move	$fp,$sp
	sw	$4,24($fp)
	sw	$5,28($fp)
	lw	$2,24($fp)
	sltu	$2,$2,2
	bne	$2,$0,$L25
	lw	$2,28($fp)
	sltu	$2,$2,2
	bne	$2,$0,$L25
	sw	$0,8($fp)
	b	$L24
$L25:
	li	$2,1			# 0x1
	sw	$2,8($fp)
$L24:
	lw	$2,8($fp)
	move	$sp,$fp
	lw	$fp,20($sp)
	addu	$sp,$sp,24
	j	$31
	.end	check_range
	.size	check_range, .-check_range
	.rdata
	.align	2
$LC2:
	.ascii	"strtol\000"
	.text
	.align	2
	.globl	process_input_numbers
	.ent	process_input_numbers
process_input_numbers:
	.frame	$fp,48,$31		# vars= 8, regs= 3/0, args= 16, extra= 8
	.mask	0xd0000000,-8
	.fmask	0x00000000,0
	.set	noreorder
	.cpload	$25
	.set	reorder
	subu	$sp,$sp,48
	.cprestore 16
	sw	$31,40($sp)
	sw	$fp,36($sp)
	sw	$28,32($sp)
	move	$fp,$sp
	sw	$4,48($fp)
	sw	$5,52($fp)
	sw	$6,56($fp)
	sw	$7,60($fp)
	la	$25,__errno
	jal	$31,$25
	sw	$0,0($2)
	sw	$0,24($fp)
	lw	$4,56($fp)
	addu	$5,$fp,24
	li	$6,10			# 0xa
	la	$25,strtoul
	jal	$31,$25
	move	$3,$2
	lw	$2,48($fp)
	sw	$3,0($2)
	la	$25,__errno
	jal	$31,$25
	lw	$3,0($2)
	li	$2,34			# 0x22
	bne	$3,$2,$L29
	lw	$2,48($fp)
	lw	$3,0($2)
	li	$2,2147418112			# 0x7fff0000
	ori	$2,$2,0xffff
	beq	$3,$2,$L28
	lw	$2,48($fp)
	lw	$3,0($2)
	li	$2,-2147483648			# 0xffffffff80000000
	beq	$3,$2,$L28
$L29:
	la	$25,__errno
	jal	$31,$25
	lw	$2,0($2)
	beq	$2,$0,$L27
	lw	$2,48($fp)
	lw	$2,0($2)
	bne	$2,$0,$L27
$L28:
	la	$4,$LC2
	la	$25,perror
	jal	$31,$25
	li	$4,1			# 0x1
	la	$25,exit
	jal	$31,$25
$L27:
	lw	$4,60($fp)
	addu	$5,$fp,24
	li	$6,10			# 0xa
	la	$25,strtoul
	jal	$31,$25
	move	$3,$2
	lw	$2,52($fp)
	sw	$3,0($2)
	la	$25,__errno
	jal	$31,$25
	lw	$3,0($2)
	li	$2,34			# 0x22
	bne	$3,$2,$L32
	lw	$2,52($fp)
	lw	$3,0($2)
	li	$2,2147418112			# 0x7fff0000
	ori	$2,$2,0xffff
	beq	$3,$2,$L31
	lw	$2,52($fp)
	lw	$3,0($2)
	li	$2,-2147483648			# 0xffffffff80000000
	beq	$3,$2,$L31
$L32:
	la	$25,__errno
	jal	$31,$25
	lw	$2,0($2)
	beq	$2,$0,$L30
	lw	$2,52($fp)
	lw	$2,0($2)
	bne	$2,$0,$L30
$L31:
	la	$4,$LC2
	la	$25,perror
	jal	$31,$25
	li	$4,1			# 0x1
	la	$25,exit
	jal	$31,$25
$L30:
	lw	$2,48($fp)
	lw	$3,52($fp)
	lw	$4,0($2)
	lw	$5,0($3)
	la	$25,check_range
	jal	$31,$25
	move	$3,$2
	li	$2,1			# 0x1
	bne	$3,$2,$L26
	li	$4,1			# 0x1
	la	$25,exit
	jal	$31,$25
$L26:
	move	$sp,$fp
	lw	$31,40($sp)
	lw	$fp,36($sp)
	addu	$sp,$sp,48
	j	$31
	.end	process_input_numbers
	.size	process_input_numbers, .-process_input_numbers
	.rdata
	.align	2
$LC3:
	.ascii	"%i\n\000"
	.align	2
$LC4:
	.ascii	"w\000"
	.text
	.align	2
	.globl	print_mcm
	.ent	print_mcm
print_mcm:
	.frame	$fp,48,$31		# vars= 8, regs= 3/0, args= 16, extra= 8
	.mask	0xd0000000,-8
	.fmask	0x00000000,0
	.set	noreorder
	.cpload	$25
	.set	reorder
	subu	$sp,$sp,48
	.cprestore 16
	sw	$31,40($sp)
	sw	$fp,36($sp)
	sw	$28,32($sp)
	move	$fp,$sp
	sw	$4,48($fp)
	sw	$5,52($fp)
	sw	$6,56($fp)
	lw	$2,56($fp)
	lb	$3,0($2)
	li	$2,45			# 0x2d
	bne	$3,$2,$L35
	lw	$4,48($fp)
	lw	$5,52($fp)
	la	$25,mcm
	jal	$31,$25
	la	$4,$LC3
	move	$5,$2
	la	$25,printf
	jal	$31,$25
	b	$L34
$L35:
	lw	$4,56($fp)
	la	$5,$LC4
	la	$25,fopen
	jal	$31,$25
	sw	$2,24($fp)
	lw	$2,24($fp)
	bne	$2,$0,$L37
	li	$4,1			# 0x1
	la	$25,exit
	jal	$31,$25
$L37:
	lw	$4,48($fp)
	lw	$5,52($fp)
	la	$25,mcm
	jal	$31,$25
	lw	$4,24($fp)
	la	$5,$LC3
	move	$6,$2
	la	$25,fprintf
	jal	$31,$25
	lw	$4,24($fp)
	la	$25,fclose
	jal	$31,$25
$L34:
	move	$sp,$fp
	lw	$31,40($sp)
	lw	$fp,36($sp)
	addu	$sp,$sp,48
	j	$31
	.end	print_mcm
	.size	print_mcm, .-print_mcm
	.align	2
	.globl	print_mcd
	.ent	print_mcd
print_mcd:
	.frame	$fp,48,$31		# vars= 8, regs= 3/0, args= 16, extra= 8
	.mask	0xd0000000,-8
	.fmask	0x00000000,0
	.set	noreorder
	.cpload	$25
	.set	reorder
	subu	$sp,$sp,48
	.cprestore 16
	sw	$31,40($sp)
	sw	$fp,36($sp)
	sw	$28,32($sp)
	move	$fp,$sp
	sw	$4,48($fp)
	sw	$5,52($fp)
	sw	$6,56($fp)
	lw	$2,56($fp)
	lb	$3,0($2)
	li	$2,45			# 0x2d
	bne	$3,$2,$L39
	lw	$4,48($fp)
	lw	$5,52($fp)
	la	$25,mcd
	jal	$31,$25
	la	$4,$LC3
	move	$5,$2
	la	$25,printf
	jal	$31,$25
	b	$L38
$L39:
	lw	$4,56($fp)
	la	$5,$LC4
	la	$25,fopen
	jal	$31,$25
	sw	$2,24($fp)
	lw	$2,24($fp)
	bne	$2,$0,$L41
	li	$4,1			# 0x1
	la	$25,exit
	jal	$31,$25
$L41:
	lw	$4,48($fp)
	lw	$5,52($fp)
	la	$25,mcd
	jal	$31,$25
	lw	$4,24($fp)
	la	$5,$LC3
	move	$6,$2
	la	$25,fprintf
	jal	$31,$25
	lw	$4,24($fp)
	la	$25,fclose
	jal	$31,$25
$L38:
	move	$sp,$fp
	lw	$31,40($sp)
	lw	$fp,36($sp)
	addu	$sp,$sp,48
	j	$31
	.end	print_mcd
	.size	print_mcd, .-print_mcd
	.rdata
	.align	2
$LC5:
	.ascii	"help\000"
	.align	2
$LC6:
	.ascii	"version\000"
	.align	2
$LC7:
	.ascii	"output\000"
	.align	2
$LC8:
	.ascii	"divisor\000"
	.align	2
$LC9:
	.ascii	"multiple\000"
	.data
	.align	2
	.type	long_options.0, @object
	.size	long_options.0, 96
long_options.0:
	.word	$LC5
	.word	0
	.word	0
	.word	104
	.word	$LC6
	.word	0
	.word	0
	.word	118
	.word	$LC7
	.word	1
	.word	0
	.word	111
	.word	$LC8
	.word	0
	.word	0
	.word	100
	.word	$LC9
	.word	0
	.word	0
	.word	109
	.word	0
	.word	0
	.word	0
	.word	0
	.rdata
	.align	2
$LC10:
	.ascii	"hvo:dm\000"
	.align	2
$LC11:
	.ascii	"-\000"
	.text
	.align	2
	.globl	main
	.ent	main
main:
	.frame	$fp,72,$31		# vars= 24, regs= 3/0, args= 24, extra= 8
	.mask	0xd0000000,-8
	.fmask	0x00000000,0
	.set	noreorder
	.cpload	$25
	.set	reorder
	subu	$sp,$sp,72
	.cprestore 24
	sw	$31,64($sp)
	sw	$fp,60($sp)
	sw	$28,56($sp)
	move	$fp,$sp
	sw	$4,72($fp)
	sw	$5,76($fp)
	sw	$0,40($fp)
	addu	$2,$fp,40
	sw	$2,16($sp)
	lw	$4,72($fp)
	lw	$5,76($fp)
	la	$6,$LC10
	la	$7,long_options.0
	la	$25,getopt_long
	jal	$31,$25
	sw	$2,44($fp)
	lw	$2,44($fp)
	addu	$2,$2,-100
	sw	$2,48($fp)
	lw	$3,48($fp)
	sltu	$2,$3,19
	beq	$2,$0,$L49
	lw	$2,48($fp)
	sll	$3,$2,2
	la	$2,$L50
	addu	$2,$3,$2
	lw	$2,0($2)
	.cpadd	$2
	j	$2
	.rdata
	.align	2
$L50:
	.gpword	$L47
	.gpword	$L49
	.gpword	$L49
	.gpword	$L49
	.gpword	$L44
	.gpword	$L49
	.gpword	$L49
	.gpword	$L49
	.gpword	$L49
	.gpword	$L48
	.gpword	$L49
	.gpword	$L46
	.gpword	$L49
	.gpword	$L49
	.gpword	$L49
	.gpword	$L49
	.gpword	$L49
	.gpword	$L49
	.gpword	$L45
	.text
$L44:
	la	$25,print_help_data
	jal	$31,$25
	b	$L43
$L45:
	la	$25,print_version_info
	jal	$31,$25
	b	$L43
$L46:
	addu	$5,$fp,36
	lw	$2,72($fp)
	sll	$3,$2,2
	lw	$2,76($fp)
	addu	$2,$3,$2
	addu	$6,$2,-8
	lw	$2,72($fp)
	sll	$3,$2,2
	lw	$2,76($fp)
	addu	$2,$3,$2
	addu	$2,$2,-4
	addu	$4,$fp,32
	lw	$6,0($6)
	lw	$7,0($2)
	la	$25,process_input_numbers
	jal	$31,$25
	lw	$4,32($fp)
	lw	$5,36($fp)
	lw	$6,optarg
	la	$25,print_mcm
	jal	$31,$25
	lw	$4,32($fp)
	lw	$5,36($fp)
	lw	$6,optarg
	la	$25,print_mcd
	jal	$31,$25
	b	$L43
$L47:
	addu	$5,$fp,36
	lw	$2,72($fp)
	sll	$3,$2,2
	lw	$2,76($fp)
	addu	$2,$3,$2
	addu	$6,$2,-8
	lw	$2,72($fp)
	sll	$3,$2,2
	lw	$2,76($fp)
	addu	$2,$3,$2
	addu	$2,$2,-4
	addu	$4,$fp,32
	lw	$6,0($6)
	lw	$7,0($2)
	la	$25,process_input_numbers
	jal	$31,$25
	lw	$4,32($fp)
	lw	$5,36($fp)
	la	$6,$LC11
	la	$25,print_mcd
	jal	$31,$25
	b	$L43
$L48:
	addu	$5,$fp,36
	lw	$2,72($fp)
	sll	$3,$2,2
	lw	$2,76($fp)
	addu	$2,$3,$2
	addu	$6,$2,-8
	lw	$2,72($fp)
	sll	$3,$2,2
	lw	$2,76($fp)
	addu	$2,$3,$2
	addu	$2,$2,-4
	addu	$4,$fp,32
	lw	$6,0($6)
	lw	$7,0($2)
	la	$25,process_input_numbers
	jal	$31,$25
	lw	$4,32($fp)
	lw	$5,36($fp)
	la	$6,$LC11
	la	$25,print_mcm
	jal	$31,$25
	b	$L43
$L49:
	addu	$5,$fp,36
	lw	$2,72($fp)
	sll	$3,$2,2
	lw	$2,76($fp)
	addu	$2,$3,$2
	addu	$6,$2,-8
	lw	$2,72($fp)
	sll	$3,$2,2
	lw	$2,76($fp)
	addu	$2,$3,$2
	addu	$2,$2,-4
	addu	$4,$fp,32
	lw	$6,0($6)
	lw	$7,0($2)
	la	$25,process_input_numbers
	jal	$31,$25
	lw	$4,32($fp)
	lw	$5,36($fp)
	la	$6,$LC11
	la	$25,print_mcm
	jal	$31,$25
	lw	$4,32($fp)
	lw	$5,36($fp)
	la	$6,$LC11
	la	$25,print_mcd
	jal	$31,$25
$L43:
	move	$4,$0
	la	$25,exit
	jal	$31,$25
	.end	main
	.size	main, .-main
	.ident	"GCC: (GNU) 3.3.3 (NetBSD nb3 20040520)"
